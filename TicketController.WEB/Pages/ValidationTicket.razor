@page "/ValidationTicket"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService

<h1 style="padding-left:37%;">Validar Ticket</h1>


<form onsubmit={{this.ValidationTickect}}>


    @if (ticket is null)
    {
                   <div class="mb-3" >
                        <label style="padding-left:37%;" >Ingresa el código del ticket:</label>
                    <InputNumber class="form-control" @bind-Value="@Id" />
                   
                        <button type="button" class="btn-btn-secondary" style="padding-left: 1%;margin-left: 45%;margin-top: 5%;" @onclick="ValidateID">Validar Ticket</button>
                    <br>
                    <label>@ticket?.Id</label>
                        <label style="padding-left:2%;">@error1</label>
                 </div>
    }
    else
    {
        if (Validate)
        {
            if (ticket.WasUsed)
            {
                             <div class="mb-3">
                                <label style="padding-left:30%;">Esta boleta fue usada en la entrada @ticket.Entrance</label>
                                <br>
                                        <label style="padding-left:41%;">Fecha @ticket.UseDate</label>
                            </div>
                           
                         
            }
            else
            {

                         <label style="padding-left:30%;" >La boleta es valida  para el  ingreso  al  estadio</label>

                            <div class="mb-3">
                                <label>Seleccione una entrada:</label>
                                <div>
                                    <select class="form-select" @bind="ticket.Entrance">
                                        <option value="0">-- Seleccione una Entrada --</option>

                                        <option value="Norte">Norte</option>
                                        <option value="Sur">Sur</option>
                                        <option value="Oriental">Oriental</option>
                                        <option value="Occidental">Occidental</option>
                                    </select>

                                </div>
                            </div>
                                      <button type="button"class="btn-btn-dark" style="padding-left: 1%;margin-left: 45%;margin-top: 5%;" @onclick="actualizarTicket">Registrar ingreso</button>
            }
        }

    }

</form>
@code {
    public Ticket? ticket;
    bool Validate = false;
    public int Id;
    public string? error1 = "";
    private async Task ValidateID()
    {
        var responseHTTP = await repository.Get<Ticket>($"/api/ticket/{Id}");

        if (responseHTTP.Error)
        {
            if (responseHTTP.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("ValidationTicket");
                error1 = "Boleta no válida";
                Validate = false;
            }
            else
            {
                var messageError = await responseHTTP.GetErrorMessageAsync();
                await sweetAlertService.FireAsync("Error", messageError, SweetAlertIcon.Error);
            }
        }
        else
        {
            ticket = responseHTTP.Response;
            error1 = "";
            Validate = true;
        }
    }


    private async Task actualizarTicket()
    {
        ticket!.UseDate = DateTime.Now;
        ticket.WasUsed = true;
        var responseHTTP = await repository.Put("/api/ticket/", ticket);

        if (responseHTTP.Error)
        {
            var mensajeError = await responseHTTP.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
        }
        else
        {

            navigationManager.NavigateTo("/ValidationTicket");
        }
    }

}
